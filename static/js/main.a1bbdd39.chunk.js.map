{"version":3,"sources":["components/LanguageContext.js","styles/images/circle.png","components/UserContext.js","components/Hamburger.js","components/Nav.js","components/Home.js","components/Contact.js","components/Modal.js","components/Footer.js","App.js","index.js"],"names":["LocalizationContext","createContext","LocalizationProvider","props","langs","en","homeButton","contactButton","homePageName","contactPageName","loginButton","changeLangButton","emailButton","userNameButton","logOutButton","loginFormTitle","formNameLabel","formEmailLabel","formPhoneLabel","formCountryLabel","formPasswordLabel","formSubmitButton","formSendButton","formLanguageLabel","formExitButton","contactFormTitle","dummyText","dummyTitle","countryList","id","name","tr","useState","langString","setLangString","Provider","value","children","UserContext","UserProvider","userName","setUserName","userEmail","setUserEmail","setUserPassword","userLanguage","setUserLanguage","Hamburger","isOpen","className","jsx","Nav","pageLocation","setPageLocation","useContext","location","useLocation","showHideModal","modalDisplay","isHamburgerOpen","setIsHamburgerOper","useEffect","pathname","src","circle","alt","exact","to","process","onClick","Home","Contact","email","phonenumber","country_code","text","contactInfo","setContactInfo","prevValue","handleContactInfoChange","e","inputValue","target","validateEmail","map","elem","isValid","test","style","backgroundColor","onSubmit","preventDefault","contactInfoJSON","JSON","stringify","console","log","htmlFor","type","placeholder","onChange","minLength","maxLength","list","Modal","userPassword","language","tempUserInfo","setTempUserInfo","userLogStatus","isUserLoggedIn","setIsUserLoggedIn","handleChange","prevVal","handleClose","display","required","Footer","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEaA,EAAsBC,0BAE5B,SAASC,EAAqBC,GACnC,IAAMC,EAAQ,CACZC,GAAI,CACFC,WAAY,OACZC,cAAe,UACfC,aAAc,mBACdC,gBAAiB,UACjBC,YAAa,QACbC,iBAAkB,kBAElBC,YAAa,SACbC,eAAgB,YAChBC,aAAc,UACdC,eAAgB,aAChBC,cAAe,YACfC,eAAgB,QAChBC,eAAgB,QAChBC,iBAAkB,UAClBC,kBAAmB,WACnBC,iBAAkB,SAClBC,eAAgB,OAChBC,kBAAmB,WACnBC,eAAgB,QAChBC,iBAAkB,eAClBC,UACE,+tCACFC,WAAY,yBACZC,YAAa,CACX,CAAEC,GAAI,KAAMC,KAAM,UAClB,CAAED,GAAI,KAAMC,KAAM,4BAClB,CAAED,GAAI,KAAMC,KAAM,kBAClB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,KAAMC,KAAM,UAClB,CAAED,GAAI,KAAMC,KAAM,SAClB,CAAED,GAAI,KAAMC,KAAM,UAClB,CAAED,GAAI,KAAMC,KAAM,cAGtBC,GAAI,CACFzB,WAAY,YACZC,cAAe,qBACfC,aAAc,mBACdC,gBAAiB,qBACjBC,YAAa,aACbC,iBAAkB,0BAClBE,eAAgB,+BAChBC,aAAc,0BACdF,YAAa,UACbG,eAAgB,mBAChBC,cAAe,WACfC,eAAgB,QAChBC,eAAgB,UAChBC,iBAAkB,UAClBC,kBAAmB,aACnBC,iBAAkB,SAClBC,eAAgB,YAChBC,kBAAmB,MACnBC,eAAgB,QAChBC,iBAAkB,2BAClBC,UACE,g9CACFC,WAAY,iBACZC,YAAa,CACX,CAAEC,GAAI,KAAMC,KAAM,cAClB,CAAED,GAAI,KAAMC,KAAM,oCAClB,CAAED,GAAI,KAAMC,KAAM,8BAClB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,KAAMC,KAAM,iBAClB,CAAED,GAAI,KAAMC,KAAM,SAClB,CAAED,GAAI,KAAMC,KAAM,YAClB,CAAED,GAAI,KAAMC,KAAM,eAIxB,EAAoCE,mBAAS5B,EAAMC,IAAnD,mBAAO4B,EAAP,KAAmBC,EAAnB,KAEA,OACE,cAAClC,EAAoBmC,SAArB,CAA8BC,MAAO,CAAEH,aAAYC,gBAAe9B,SAAlE,SACGD,EAAMkC,WClFE,UAA0B,mCCE5BC,EAAcrC,0BAEpB,SAASsC,EAAapC,GAC3B,MAAgC6B,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAAwCX,mBAAS,IAAjD,mBAAqBY,GAArB,WACA,EAAwCZ,mBAAS,IAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAEA,OACE,cAACR,EAAYH,SAAb,CACEC,MAAO,CACLI,WACAC,cACAC,YACAC,eACAC,kBACAC,eACAC,mBARJ,SAWG3C,EAAMkC,WCtBE,SAASU,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAClC,OACE,qCACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,sBAGjB,uBAAOC,KAAG,EAAV,ifAkBiBF,EAAS,gBAAkB,YAlB5C,iGAsBiBA,EAAS,mBAAqB,gBAtB/C,iCAuBeA,EAAS,EAAI,EAvB5B,iGA2BiBA,EAAS,iBAAmB,YA3B7C,4DC4KSG,MA9Kf,SAAahD,GACX,MAAwC6B,mBAAS,KAAjD,mBAAOoB,EAAP,KAAqBC,EAArB,KACA,EAA6CC,qBAAWtD,GAAhDiC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAe9B,EAAnC,EAAmCA,MACnC,EAOIkD,qBAAWhB,GANbE,EADF,EACEA,SACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,gBACAE,EANF,EAMEA,gBAEES,EAAWC,cACTC,EAAgBtD,EAAMuD,aAC5B,EAA8C1B,oBAAS,GAAvD,mBAAO2B,EAAP,KAAwBC,EAAxB,KAwBA,OApBAC,qBAAU,WACkB,MAAtBN,EAASO,SACXT,EAAgB,KAEhBA,EAAgB,aAEjB,CAACE,IAeF,sBAAKN,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAWpB,GAAG,eAA7B,UACE,qBAAKoB,UAAU,YAAYc,IAAKC,EAAQC,IAAI,KAC1B,MAAjBb,EACC,oBAAIH,UAAU,cAAd,SAA6BhB,EAAWzB,eAExC,oBAAIyC,UAAU,cAAd,SAA6BhB,EAAWxB,qBAI5C,qBAAIwC,UAAU,WAAWpB,GAAG,gBAA5B,UACE,cAAC,IAAD,CAASqC,OAAK,EAACC,GAAIC,yBAAnB,SACE,6BAAKnC,EAAW3B,eAElB,cAAC,IAAD,CAAS6D,GAAIC,gCAAb,SACE,6BAAKnC,EAAW1B,kBAElB,qBAAI0C,UAAU,gBAAd,UACE,wBAAQA,UAAU,0BAAlB,SACGhB,EAAWtB,mBAEd,sBAAKsC,UAAU,wBAAf,UACE,wBACEA,UAAU,kCACVoB,QAnCW,WACrBnC,EAAc9B,EAAM2B,KAgCZ,gBAMA,wBACEkB,UAAU,kCACVoB,QA5CW,WACrBnC,EAAc9B,EAAMC,KAyCZ,sBAQJ,6BACgB,KAAbmC,EACC,wBAAQS,UAAU,aAAaoB,QAASZ,EAAxC,SACGxB,EAAWvB,cAGd,sBAAKuC,UAAU,gBAAf,UACE,wBAAQA,UAAU,0BAAlB,SAA6CT,IAC7C,sBAAKS,UAAU,wBAAf,UACE,4BAAIP,IACJ,wBAAQO,UAAU,aAAaoB,QAtDxB,WACnB5B,EAAY,IACZE,EAAa,IACbC,EAAgB,IAChBE,EAAgB,KAkDJ,SACGb,EAAWnB,0BAOxB,qBAAKuD,QA9EmB,WAC1BT,GAAoBD,IA6ElB,SACE,cAACZ,EAAD,CAAWC,OAAQW,MAErB,uBAAOT,KAAG,EAAV,23CAwDiBS,EAAkB,OAAS,OAxD5C,+cCzFSW,MAVf,SAAcnE,GACZ,IAAQ8B,EAAeqB,qBAAWtD,GAA1BiC,WACR,OACE,sBAAKgB,UAAU,iBAAf,UACE,oBAAIpB,GAAG,eAAP,SAAuBI,EAAWN,aAClC,mBAAGE,GAAG,YAAN,SAAmBI,EAAWP,gB,eC2GrB6C,MA/Gf,SAAiBpE,GACf,IAAQ8B,EAAeqB,qBAAWtD,GAA1BiC,WACR,EAAgCqB,qBAAWhB,GAAnCE,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,UAClB,EAAsCV,mBAAS,CAC7CF,KAAM,GACN0C,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,KAAM,KALR,mBAAOC,EAAP,KAAoBC,EAApB,KAOAhB,qBAAU,WACRgB,GAAe,SAACC,GACd,OAAO,2BAAKA,GAAZ,IAAuBhD,KAAMU,EAAUgC,MAAO9B,SAE/C,CAACF,EAAUE,IACd,IAAMqC,EAA0B,SAACC,GAC/B,IAAIC,EAAaD,EAAEE,OAAO9C,MAC1ByC,GAAe,SAACC,GACd,OAAO,2BAAKA,GAAZ,kBAAwBE,EAAEE,OAAOpD,KAAOmD,OAEpB,UAAlBD,EAAEE,OAAOpD,MACXqD,EAAcF,EAAYD,IAGxBpD,EAAcK,EAAWL,YAAYwD,KAAI,SAACC,GAC9C,OAAO,wBAAsBjD,MAAOiD,EAAKvD,MAArBuD,EAAKxD,OAcrBsD,EAAgB,SAACX,EAAOQ,GAC5B,IACMM,EADK,eACQC,KAAKf,GAEtBQ,EAAEE,OAAOM,MAAMC,gBADbH,EAC+B,QAEA,OAGrC,OACE,qBAAKrC,UAAU,yBAAf,SACE,uBAAMA,UAAU,eAAeyC,SAvBH,SAACV,GAC/BA,EAAEW,iBACF,IAAMC,EAAkBC,KAAKC,UAAUlB,GACvCmB,QAAQC,IAAIJ,GACZf,EAAe,CACb/C,KAAM,GACN0C,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,KAAM,MAcN,UACE,oBAAI9C,GAAG,qBAAP,SAA6BI,EAAWR,mBACxC,uBAAOwB,UAAU,oBAAoBgD,QAAQ,OAA7C,SACGhE,EAAWjB,gBAEd,uBACEkF,KAAK,OACLpE,KAAK,OACLqE,YAAalE,EAAWjB,cACxBoB,MAAOwC,EAAY9C,KACnBsE,SAAUrB,IAEZ,uBAAO9B,UAAU,oBAAoBgD,QAAQ,QAA7C,SACGhE,EAAWhB,iBAEd,uBACEiF,KAAK,QACLpE,KAAK,QACLsE,SAAUrB,EACV3C,MAAOwC,EAAYJ,QAErB,uBAAOvB,UAAU,oBAAoBgD,QAAQ,cAA7C,SACGhE,EAAWf,iBAEd,uBACEgF,KAAK,MACLpE,KAAK,cACLuE,UAAU,IACVC,UAAU,KACVlE,MAAOwC,EAAYH,YACnB2B,SAAUrB,IAEZ,uBAAO9B,UAAU,oBAAoBgD,QAAQ,eAA7C,SACGhE,EAAWd,mBAEd,uBACE+E,KAAK,OACLpE,KAAK,eACLyE,KAAK,YACLnE,MAAOwC,EAAYF,aACnB0B,SAAUrB,IAEZ,0BAAUlD,GAAG,YAAb,SAA0BD,IAC1B,uBAAOqB,UAAU,oBAAoBgD,QAAQ,OAA7C,qBAGA,0BACEpE,GAAG,UACHC,KAAK,OACLqE,YAAY,oBACZ/D,MAAOwC,EAAYD,KACnByB,SAAUrB,IAEZ,wBAAQ9B,UAAU,6BAA6BiD,KAAK,SAApD,SACGjE,EAAWX,uBCTPkF,MA/Ff,SAAerG,GACb,MAA6CmD,qBAAWtD,GAAhDiC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAe9B,EAAnC,EAAmCA,MACnC,EAAwC4B,mBAAS,CAC/CQ,SAAU,GACVE,UAAW,GACX+D,aAAc,GACdC,SAAU,KAJZ,mBAAOC,EAAP,KAAqBC,EAArB,KAMA,EAA8CzG,EAAM0G,cAA5CC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBACxB,EACEzD,qBAAWhB,GADLG,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,aAAcC,EAAnC,EAAmCA,gBAAiBE,EAApD,EAAoDA,gBAE9CkE,EAAe,SAAChC,GACpB4B,GAAgB,SAACK,GACf,OAAO,2BAAKA,GAAZ,kBAAsBjC,EAAEE,OAAOpD,KAAOkD,EAAEE,OAAO9C,WAEjD2D,QAAQC,IAAIW,EAAanE,WAkBrB0E,EAAc,SAAClC,GACnBA,EAAEW,iBACFiB,EAAgB,CACdpE,SAAU,GACVE,UAAW,GACX+D,aAAc,GACdC,SAAU,KAEZK,EAAkB,SAGpB,OACE,qBAAK9D,UAAU,uBAAuBuC,MAAO,CAAE2B,QAASL,GAAxD,SACE,uBAAM7D,UAAU,aAAauC,MAAO,CAAE2B,QAASL,GAA/C,UACE,6BAAK7E,EAAWlB,iBAChB,uBAAOkF,QAAQ,WAAf,SAA2BhE,EAAWjB,gBACtC,uBACEkF,KAAK,OACLpE,KAAK,WACLqE,YAAalE,EAAWjB,cACxBoF,SAAUY,EACV5E,MAAOuE,EAAanE,SACpB6D,UAAU,IACVe,UAAU,IAEZ,uBAAOnB,QAAQ,YAAf,SAA4BhE,EAAWhB,iBACvC,uBACEiF,KAAK,OACLpE,KAAK,YACLsE,SAAUY,EACV5E,MAAOuE,EAAajE,UACpByD,YAAY,wBAEd,uBAAOF,QAAQ,eAAf,SAA+BhE,EAAWb,oBAC1C,uBACE8E,KAAK,WACLpE,KAAK,eACLsE,SAAUY,EACV5E,MAAOuE,EAAaF,eAEtB,2BAAUL,SAAUY,EAApB,UACE,iCAAS/E,EAAWV,oBACpB,8BACE,uBAAO0E,QAAQ,KAAf,qBACA,uBAAOC,KAAK,QAAQrE,GAAG,KAAKC,KAAK,WAAWM,MAAM,UAEpD,8BACE,uBAAO6D,QAAQ,KAAf,0BACA,uBAAOC,KAAK,QAAQrE,GAAG,KAAKC,KAAK,WAAWM,MAAM,aAGtD,gCACE,wBAAQ8D,KAAK,SAAS7B,QApET,SAACW,GACpBvC,EAAYkE,EAAanE,UACzBG,EAAagE,EAAajE,WAC1BE,EAAgB+D,EAAaF,cAC7B3D,EAAgB6D,EAAaD,UAC7BxE,GAAc,WAOZ,MAL8B,OAA1ByE,EAAaD,SACRtG,EAAM2B,GAEN3B,EAAMC,MAIjB6G,EAAYlC,IAsDN,SACG/C,EAAWZ,mBAEd,wBAAQgD,QAAS6C,EAAjB,SAA+BjF,EAAWT,0BC9ErC6F,MAXf,SAAgBlH,GACd,IAAQ8B,EAAeqB,qBAAWtD,GAA1BiC,WAER,OACE,sBAAKgB,UAAU,mBAAf,UACE,6BAAKhB,EAAWzB,eAChB,4CCqCS8G,MAnCf,WACE,MAA4CtF,mBAAS,QAArD,mBAAO8E,EAAP,KAAuBC,EAAvB,KAQA,OACE,cAAC7G,EAAD,UACE,cAACqC,EAAD,UACE,cAAC,IAAD,UACE,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CAAKS,aAZO,WAElBqD,EADqB,SAAnBD,EACgB,OAEA,WASZ,cAAC,EAAD,CAAOD,cAAe,CAAEC,iBAAgBC,uBACxC,eAAC,IAAD,WACE,cAAC,IAAD,CACEQ,KAAMnD,yBACNF,OAAK,EACLsD,UAAWlD,IAEb,cAAC,IAAD,CACEiD,KAAMnD,gCACNoD,UAAWjD,OAGf,cAAC,EAAD,cClCZkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a1bbdd39.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const LocalizationContext = createContext();\n\nexport function LocalizationProvider(props) {\n  const langs = {\n    en: {\n      homeButton: \"Home\",\n      contactButton: \"Contact\",\n      homePageName: \"Circle Mock Site\",\n      contactPageName: \"Contact\",\n      loginButton: \"Login\",\n      changeLangButton: \"Change Language\",\n\n      emailButton: \"E-Mail\",\n      userNameButton: \"User Name\",\n      logOutButton: \"Log Out\",\n      loginFormTitle: \"Login Form\",\n      formNameLabel: \"User Name\",\n      formEmailLabel: \"Email\",\n      formPhoneLabel: \"Phone\",\n      formCountryLabel: \"Country\",\n      formPasswordLabel: \"Password\",\n      formSubmitButton: \"Submit\",\n      formSendButton: \"Send\",\n      formLanguageLabel: \"Language\",\n      formExitButton: \"Close\",\n      contactFormTitle: \"Contact Form\",\n      dummyText:\n        \"The European languages are members of the same family. Their separate existence is a myth. For science, music, sport, etc, Europe uses the same vocabulary. The languages only differ in their grammar, their pronunciation and their most common words. Everyone realizes why a new common language would be desirable: one could refuse to pay expensive translators. To achieve this, it would be necessary to have uniform grammar, pronunciation and more common words. If several languages coalesce, the grammar of the resulting language is more simple and regular than that of the individual languages. The new common language will be more simple and regular than the existing European languages. It will be as simple as Occidental; in fact, it will be Occidental. To an English person, it will seem like simplified English, as a skeptical Cambridge friend of mine told me what Occidental is.The European languages are members of the same family. Their separate existence is a myth. For science, music, sport, etc, Europe uses the same vocabulary. The languages only differ in their grammar, their pronunciation and their most common words. Everyone realizes why a new common language would be desirable: one could refuse to pay expensive translators.\",\n      dummyTitle: \"The European Languages\",\n      countryList: [\n        { id: \"TR\", name: \"Turkey\" },\n        { id: \"US\", name: \"United States of America\" },\n        { id: \"GB\", name: \"United Kingdom\" },\n        { id: \"DE\", name: \"Germany\" },\n        { id: \"SE\", name: \"Sweden\" },\n        { id: \"KE\", name: \"Kenya\" },\n        { id: \"BR\", name: \"Brazil\" },\n        { id: \"ZW\", name: \"Zimbabwe\" },\n      ],\n    },\n    tr: {\n      homeButton: \"Ana Sayfa\",\n      contactButton: \"İletişim\",\n      homePageName: \"Circle Mock Site\",\n      contactPageName: \"İletişim\",\n      loginButton: \"Giriş\",\n      changeLangButton: \"Dili Değiştir\",\n      userNameButton: \"Kullanıcı Adı\",\n      logOutButton: \"Çıkış\",\n      emailButton: \"E-Posta\",\n      loginFormTitle: \"Giriş Formu\",\n      formNameLabel: \"Ad-Soyad\",\n      formEmailLabel: \"Email\",\n      formPhoneLabel: \"Telefon\",\n      formCountryLabel: \"Ülke\",\n      formPasswordLabel: \"Şifre\",\n      formSubmitButton: \"Onayla\",\n      formSendButton: \"Gönder\",\n      formLanguageLabel: \"Dil\",\n      formExitButton: \"Kapat\",\n      contactFormTitle: \"İletişim Formu\",\n      dummyText:\n        \"Avrupa dilleri aynı ailenin üyeleridir. Ayrı varlıkları bir efsanedir. Avrupa, bilim, müzik, spor vb. için aynı kelimeleri kullanır. Diller yalnızca gramerleri, telaffuzları ve en yaygın sözcükleri bakımından farklılık gösterir. Herkes yeni bir ortak dilin neden istendiğini anlıyor: pahalı çevirmenlere ödeme yapmayı reddedebiliriz. Bunu başarmak için tek tip gramer, telaffuz ve daha yaygın kelimelere sahip olmak gerekir. Birkaç dil birleşirse, ortaya çıkan dilin grameri, tek tek dillerin gramerinden daha basit ve düzenlidir. Yeni ortak dil, mevcut Avrupa dillerinden daha basit ve düzenli olacaktır. Occidental kadar basit olacak; aslında, Batılı olacak. Cambridge'den şüpheci bir arkadaşımın bana Occidental'ın ne olduğunu söylediği gibi, bir İngiliz için basitleştirilmiş İngilizce gibi görünecektir. Avrupa dilleri aynı ailenin üyeleridir. Ayrı varlıkları bir efsanedir. Avrupa, bilim, müzik, spor vb. için aynı kelimeleri kullanır. Diller yalnızca gramerleri, telaffuzları ve en yaygın sözcükleri bakımından farklılık gösterir. Herkes yeni bir ortak dilin neden istendiğini anlıyor: pahalı çevirmenlere ödeme yapmayı reddedebiliriz.\",\n      dummyTitle: \"Avrupa Dilleri\",\n      countryList: [\n        { id: \"TR\", name: \"Türkiye\" },\n        { id: \"US\", name: \"Amerika Birleşik Devletleri\" },\n        { id: \"GB\", name: \"Birleşik Krallık\" },\n        { id: \"DE\", name: \"Almanya\" },\n        { id: \"SE\", name: \"İsveç\" },\n        { id: \"KE\", name: \"Kenya\" },\n        { id: \"BR\", name: \"Brezilya\" },\n        { id: \"ZW\", name: \"Zimbabve\" },\n      ],\n    },\n  };\n  const [langString, setLangString] = useState(langs.en);\n\n  return (\n    <LocalizationContext.Provider value={{ langString, setLangString, langs }}>\n      {props.children}\n    </LocalizationContext.Provider>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/circle.c317b5e1.png\";","import React, { createContext, useState } from \"react\";\n\nexport const UserContext = createContext();\n\nexport function UserProvider(props) {\n  const [userName, setUserName] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userLanguage, setUserLanguage] = useState(\"\");\n\n  return (\n    <UserContext.Provider\n      value={{\n        userName,\n        setUserName,\n        userEmail,\n        setUserEmail,\n        setUserPassword,\n        userLanguage,\n        setUserLanguage,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n","export default function Hamburger({ isOpen }) {\n  return (\n    <>\n      <div className=\"hamburger\">\n        <div className=\"burger burger1\" />\n        <div className=\"burger burger2\" />\n        <div className=\"burger burger3\" />\n      </div>\n\n      <style jsx>{`\n        .hamburger {\n          width: 2rem;\n          height: 2rem;\n          display: flex;\n          justify-content: space-around;\n          flex-flow: column nowrap;\n          z-index: 10;\n        }\n        .burger {\n          width: 2rem;\n          height: 0.25rem;\n          border-radius: 10px;\n          background-color: black;\n          transform-origin: 1px;\n          transition: all 0.3s linear;\n        }\n        .burger1 {\n          transform: ${isOpen ? \"rotate(45deg)\" : \"rotate(0)\"};\n          margin-bottom: 7px;\n        }\n        .burger2 {\n          transform: ${isOpen ? \"translateX(100%)\" : \"translateX(0)\"};\n          opacity: ${isOpen ? 0 : 1};\n          margin-bottom: 7px;\n        }\n        .burger3 {\n          transform: ${isOpen ? \"rotate(-45deg)\" : \"rotate(0)\"};\n          margin-bottom: 8px;\n        }\n      `}</style>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { LocalizationContext } from \"./LanguageContext\";\nimport circle from \"../styles/images/circle.png\";\nimport { UserContext } from \"./UserContext\";\nimport Hamburger from \"./Hamburger\";\n\nfunction Nav(props) {\n  const [pageLocation, setPageLocation] = useState(\"/\");\n  const { langString, setLangString, langs } = useContext(LocalizationContext);\n  const {\n    userName,\n    setUserName,\n    userEmail,\n    setUserEmail,\n    setUserPassword,\n    setUserLanguage,\n  } = useContext(UserContext);\n  let location = useLocation();\n  const showHideModal = props.modalDisplay;\n  const [isHamburgerOpen, setIsHamburgerOper] = useState(false);\n  const toggleHamburgerOpen = () => {\n    setIsHamburgerOper(!isHamburgerOpen);\n  };\n  useEffect(() => {\n    if (location.pathname === \"/\") {\n      setPageLocation(\"/\");\n    } else {\n      setPageLocation(\"contact\");\n    }\n  }, [location]);\n  const changeLangToEn = () => {\n    setLangString(langs.en);\n  };\n  const changeLangToTr = () => {\n    setLangString(langs.tr);\n  };\n  const handleLogout = () => {\n    setUserName(\"\");\n    setUserEmail(\"\");\n    setUserPassword(\"\");\n    setUserLanguage(\"\");\n  };\n\n  return (\n    <nav className=\"nav-container\">\n      <div className=\"nav-side\" id=\"nav-leftside\">\n        <img className=\"nav-image\" src={circle} alt=\"\" />\n        {pageLocation === \"/\" ? (\n          <h3 className=\"nav-heading\">{langString.homePageName}</h3>\n        ) : (\n          <h3 className=\"nav-heading\">{langString.contactPageName}</h3>\n        )}\n      </div>\n\n      <ul className=\"nav-side\" id=\"nav-rigthside\">\n        <NavLink exact to={process.env.PUBLIC_URL + \"/\"}>\n          <li>{langString.homeButton}</li>\n        </NavLink>\n        <NavLink to={process.env.PUBLIC_URL + \"/contact\"}>\n          <li>{langString.contactButton}</li>\n        </NavLink>\n        <li className=\"lang-dropdown\">\n          <button className=\"lang-dropbtn nav-button\">\n            {langString.changeLangButton}\n          </button>\n          <div className=\"lang-dropdown-content\">\n            <button\n              className=\"nav-button lang-selector-button\"\n              onClick={changeLangToTr}\n            >\n              Tr\n            </button>\n            <button\n              className=\"nav-button lang-selector-button\"\n              onClick={changeLangToEn}\n            >\n              En\n            </button>\n          </div>\n        </li>\n        <li>\n          {userName === \"\" ? (\n            <button className=\"nav-button\" onClick={showHideModal}>\n              {langString.loginButton}\n            </button>\n          ) : (\n            <div className=\"user-dropdown\">\n              <button className=\"user-dropbtn nav-button\">{userName}</button>\n              <div className=\"user-dropdown-content\">\n                <p>{userEmail}</p>\n                <button className=\"nav-button\" onClick={handleLogout}>\n                  {langString.logOutButton}\n                </button>\n              </div>\n            </div>\n          )}\n        </li>\n      </ul>\n      <div onClick={toggleHamburgerOpen}>\n        <Hamburger isOpen={isHamburgerOpen}></Hamburger>\n      </div>\n      <style jsx>{`\n        .nav-container {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          width: 100%;\n          height: 10vh;\n          justify-content: space-around;\n          box-shadow: 0px 2px 2px #c0bfbf;\n          padding: 1.5vh 0;\n        }\n        .nav-side {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          justify-content: space-evenly;\n          width: 50%;\n        }\n        .nav-heading {\n          font-size: 3vw;\n        }\n        .nav-image {\n          height: 3vw;\n        }\n        .nav-button {\n          border: none;\n          background-color: #f37950;\n          box-shadow: 1px 1px 1px #888888;\n          color: #fff2e9;\n          border-radius: 4px;\n          font-weight: 700;\n          font-size: 2vh;\n          height: auto;\n        }\n        .nav-container ul {\n          display: flex;\n          flex-wrap: wrap;\n          float: right;\n          margin: 0px;\n          padding: 0px;\n        }\n\n        .hamburger {\n          display: none;\n          z-index: 6;\n        }\n\n        @media (max-width: 1024px) {\n          .hamburger {\n            display: inline-block;\n            padding-top: 10px;\n            margin-left: 10px;\n            z-index: 6;\n          }\n\n          #nav-rigthside {\n            display: ${isHamburgerOpen ? \"flex\" : \"none\"};\n            flex-direction: column;\n            justify-content: space-evenly;\n            align-items: center;\n            background-color: white;\n            height: 35vh;\n            width: 35vw;\n            top: 10vh;\n            right: 0;\n            position: fixed;\n          }\n          .nav-heading {\n            font-size: 1.5rem;\n          }\n          .nav-image {\n            height: 1.5rem;\n          }\n        }\n      `}</style>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useContext } from \"react\";\nimport { LocalizationContext } from \"./LanguageContext\";\n\nfunction Home(props) {\n  const { langString } = useContext(LocalizationContext);\n  return (\n    <div className=\"home-container\">\n      <h1 id=\"home-heading\">{langString.dummyTitle}</h1>\n      <p id=\"home-text\">{langString.dummyText}</p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { LocalizationContext } from \"./LanguageContext\";\nimport { UserContext } from \"./UserContext\";\n\nfunction Contact(props) {\n  const { langString } = useContext(LocalizationContext);\n  const { userName, userEmail } = useContext(UserContext);\n  const [contactInfo, setContactInfo] = useState({\n    name: \"\",\n    email: \"\",\n    phonenumber: \"\",\n    country_code: \"\",\n    text: \"\",\n  });\n  useEffect(() => {\n    setContactInfo((prevValue) => {\n      return { ...prevValue, name: userName, email: userEmail };\n    });\n  }, [userName, userEmail]);\n  const handleContactInfoChange = (e) => {\n    let inputValue = e.target.value;\n    setContactInfo((prevValue) => {\n      return { ...prevValue, [e.target.name]: inputValue };\n    });\n    if (e.target.name === \"email\") {\n      validateEmail(inputValue, e);\n    }\n  };\n  const countryList = langString.countryList.map((elem) => {\n    return <option key={elem.id} value={elem.name} />;\n  });\n  const handleContactFormSubmit = (e) => {\n    e.preventDefault();\n    const contactInfoJSON = JSON.stringify(contactInfo);\n    console.log(contactInfoJSON);\n    setContactInfo({\n      name: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      country_code: \"\",\n      text: \"\",\n    });\n  };\n  const validateEmail = (email, e) => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    const isValid = re.test(email);\n    if (isValid) {\n      e.target.style.backgroundColor = \"green\";\n    } else {\n      e.target.style.backgroundColor = \"red\";\n    }\n  };\n  return (\n    <div className=\"contact-page-container\">\n      <form className=\"contact-form\" onSubmit={handleContactFormSubmit}>\n        <h4 id=\"contact-form-title\">{langString.contactFormTitle}</h4>\n        <label className=\"contac-form-label\" htmlFor=\"name\">\n          {langString.formNameLabel}\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder={langString.formNameLabel}\n          value={contactInfo.name}\n          onChange={handleContactInfoChange}\n        />\n        <label className=\"contac-form-label\" htmlFor=\"email\">\n          {langString.formEmailLabel}\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          onChange={handleContactInfoChange}\n          value={contactInfo.email}\n        />\n        <label className=\"contac-form-label\" htmlFor=\"phonenumber\">\n          {langString.formPhoneLabel}\n        </label>\n        <input\n          type=\"tel\"\n          name=\"phonenumber\"\n          minLength=\"9\"\n          maxLength=\"14\"\n          value={contactInfo.phonenumber}\n          onChange={handleContactInfoChange}\n        />\n        <label className=\"contac-form-label\" htmlFor=\"country_code\">\n          {langString.formCountryLabel}\n        </label>\n        <input\n          type=\"text\"\n          name=\"country_code\"\n          list=\"countries\"\n          value={contactInfo.country_code}\n          onChange={handleContactInfoChange}\n        />\n        <datalist id=\"countries\">{countryList}</datalist>\n        <label className=\"contac-form-label\" htmlFor=\"text\">\n          Subject\n        </label>\n        <textarea\n          id=\"subject\"\n          name=\"text\"\n          placeholder=\"Write something..\"\n          value={contactInfo.text}\n          onChange={handleContactInfoChange}\n        />\n        <button className=\"contact-form-submit-button\" type=\"submit\">\n          {langString.formSendButton}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { useContext, useState } from \"react\";\nimport { LocalizationContext } from \"./LanguageContext\";\nimport { UserContext } from \"./UserContext\";\n\nfunction Modal(props) {\n  const { langString, setLangString, langs } = useContext(LocalizationContext);\n  const [tempUserInfo, setTempUserInfo] = useState({\n    userName: \"\",\n    userEmail: \"\",\n    userPassword: \"\",\n    language: \"\",\n  });\n  const { isUserLoggedIn, setIsUserLoggedIn } = props.userLogStatus;\n  const { setUserName, setUserEmail, setUserPassword, setUserLanguage } =\n    useContext(UserContext);\n  const handleChange = (e) => {\n    setTempUserInfo((prevVal) => {\n      return { ...prevVal, [e.target.name]: e.target.value };\n    });\n    console.log(tempUserInfo.userName);\n  };\n  const handleSubmit = (e) => {\n    setUserName(tempUserInfo.userName);\n    setUserEmail(tempUserInfo.userEmail);\n    setUserPassword(tempUserInfo.userPassword);\n    setUserLanguage(tempUserInfo.language);\n    setLangString(() => {\n      let lang;\n      if (tempUserInfo.language === \"tr\") {\n        lang = langs.tr;\n      } else {\n        lang = langs.en;\n      }\n      return lang;\n    });\n    handleClose(e);\n  };\n  const handleClose = (e) => {\n    e.preventDefault();\n    setTempUserInfo({\n      userName: \"\",\n      userEmail: \"\",\n      userPassword: \"\",\n      language: \"\",\n    });\n    setIsUserLoggedIn(\"none\");\n  };\n\n  return (\n    <div className=\"login-form-container\" style={{ display: isUserLoggedIn }}>\n      <form className=\"login-form\" style={{ display: isUserLoggedIn }}>\n        <h4>{langString.loginFormTitle}</h4>\n        <label htmlFor=\"userName\">{langString.formNameLabel}</label>\n        <input\n          type=\"text\"\n          name=\"userName\"\n          placeholder={langString.formNameLabel}\n          onChange={handleChange}\n          value={tempUserInfo.userName}\n          minLength=\"3\"\n          required={true}\n        />\n        <label htmlFor=\"userEmail\">{langString.formEmailLabel}</label>\n        <input\n          type=\"mail\"\n          name=\"userEmail\"\n          onChange={handleChange}\n          value={tempUserInfo.userEmail}\n          placeholder=\"example@example.com\"\n        />\n        <label htmlFor=\"userPassword\">{langString.formPasswordLabel}</label>\n        <input\n          type=\"password\"\n          name=\"userPassword\"\n          onChange={handleChange}\n          value={tempUserInfo.userPassword}\n        />\n        <fieldset onChange={handleChange}>\n          <legend>{langString.formLanguageLabel}</legend>\n          <p>\n            <label htmlFor=\"en\">English</label>\n            <input type=\"radio\" id=\"en\" name=\"language\" value=\"en\" />\n          </p>\n          <p>\n            <label htmlFor=\"tr\">Türkçe</label>\n            <input type=\"radio\" id=\"tr\" name=\"language\" value=\"tr\" />\n          </p>\n        </fieldset>\n        <div>\n          <button type=\"submit\" onClick={handleSubmit}>\n            {langString.formSubmitButton}\n          </button>\n          <button onClick={handleClose}>{langString.formExitButton}</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useContext } from \"react\";\nimport { LocalizationContext } from \"./LanguageContext\";\n\nfunction Footer(props) {\n  const { langString } = useContext(LocalizationContext);\n\n  return (\n    <div className=\"footer-container\">\n      <h2>{langString.homePageName}</h2>\n      <p>by I.K.</p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport Modal from \"./components/Modal\";\nimport Footer from \"./components/Footer\";\nimport { LocalizationProvider } from \"./components/LanguageContext\";\nimport { UserProvider } from \"./components/UserContext\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(\"none\");\n  const showHideModal = () => {\n    if (isUserLoggedIn === \"none\") {\n      setIsUserLoggedIn(\"flex\");\n    } else {\n      setIsUserLoggedIn(\"none\");\n    }\n  };\n  return (\n    <LocalizationProvider>\n      <UserProvider>\n        <Router>\n          <div className=\"App\">\n            <Nav modalDisplay={showHideModal} />\n            <Modal userLogStatus={{ isUserLoggedIn, setIsUserLoggedIn }} />\n            <Switch>\n              <Route\n                path={process.env.PUBLIC_URL + \"/\"}\n                exact\n                component={Home}\n              />\n              <Route\n                path={process.env.PUBLIC_URL + \"/contact\"}\n                component={Contact}\n              />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </UserProvider>\n    </LocalizationProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}